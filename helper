#!/usr/bin/env python3
from collections import defaultdict
from pprint      import pprint
import pickle, sys

def get_tasks(filename):
    try:
        with open(filename, 'rb') as infile:
            tasks = pickle.load(infile)
    except FileNotFoundError as e:
        tasks = defaultdict(list)
    return tasks

def save_tasks(tasks, filename):
    with open(filename, 'wb') as outfile:
        pickle.dump(tasks, outfile)

def add(tasks, task):
    taskData, duration = task
    tasks[duration].append(taskData)
    return tasks

def do(tasks, duration, overwrite=True):
    possible = tasks[duration]
    if len(possible) == 0:
        print('No available tasks to be done')
    else:
        print('Next task:')
        print(possible[0])
        if overwrite:
            tasks[duration] = possible[1:]
    return tasks

def see(tasks, duration):
    print('Next task would be:')
    return do(tasks, duration, overwrite=False)

def parse_task(text):
    result = text.split(',')
    if len(result) == 2:
        data, duration = text.split(',')
        return (data, int(duration))
    else:
        return int(result[0])

commands = {
        'add' : add,
        'see' : see,
        'do'  : do
        }

def main(args):
    filename = 'tasks.pkl'
    tasks = get_tasks(filename)

    if len(args) == 1:
        if args[0] == 'view':
            pprint(tasks)
    else:
        subCommand, text = args
        tasks = commands[subCommand](tasks, parse_task(text))

    save_tasks(tasks, filename)
    return 0

if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
